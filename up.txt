--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v81=0;while true do if (v81==0) then v19=v0(v3(v30,1,1));return "";end end else local v82=v2(v0(v30,16));if v19 then local v92=v5(v82,v19);v19=nil;return v92;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/(2^(v32-(2 -(878 -(282 + 595))))))%((5 -3)^(((v33-((1638 -(1523 + 114)) -0)) -(v32-1)) + (2 -1))) ;return v83-(v83%(620 -(555 + 64))) ;else local v84=931 -(857 + 74) ;local v85;while true do if (v84==0) then v85=((513 + 57) -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v85 + v85))>=v85) and (1 + (0 -0))) or ((1065 -(68 + 997)) + (1270 -(226 + 1044))) ;end end end end local function v21() local v34=0;local v35;while true do if (((961 -(892 + 65)) -3)==v34) then return v35;end if (v34==(117 -(32 + 85))) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 ;v34=1 + 0 ;end end end local function v22() local v36=(0 -0) -0 ;local v37;local v38;while true do if (v36==(1 -0)) then return (v38 * (469 -213)) + v37 ;end if (v36==(350 -((1039 -(802 + 150)) + 263))) then v37,v38=v1(v16,v18,v18 + (4 -2) );v18=v18 + (182 -(67 + 113)) ;v36=(2 -1) + 0 ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + (6 -2) ;return (v42 * (12211951 + 2659478 + 1905787)) + (v41 * (66533 -(915 + 82))) + (v40 * (724 -468)) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=1 -0 ;local v46=(v20(v44,1188 -(1069 + 118) ,45 -25 ) * ((3 -1)^(6 + (1512 -(998 + 488))))) + v43 ;local v47=v20(v44,37 -16 ,31);local v48=((v20(v44,32 + 0 )==(792 -(368 + 423))) and  -1) or (3 -2) ;if (v47==0) then if (v46==(18 -(10 + 3 + 5))) then return v48 * (0 -0) ;else v47=443 -(416 + 26) ;v45=0;end elseif (v47==(6535 -4488)) then return ((v46==(0 + 0 + 0)) and (v48 * ((1 -0)/((1210 -(201 + 571)) -(145 + (1431 -(116 + 1022))))))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/(2^(482 -(44 + 386))))) ;end local function v25(v49) local v50=0;local v51;local v52;while true do if (v50==(4 -3)) then v51=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;v50=(12 -5) -5 ;end if ((0 -(1080 -(1020 + 60)))==v50) then v51=nil;if  not v49 then v49=v23();if (v49==(859 -(814 + 45))) then return "";end end v50=2 -(1424 -(630 + 793)) ;end if (v50==(1 + 1)) then v52={};for v93=1, #v51 do v52[v93]=v2(v1(v3(v51,v93,v93)));end v50=2 + 1 ;end if (v50==(888 -(261 + 624))) then return v6(v52);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return 0;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();local v60=(function() return;end)();while true do if ((2 + 0)==v53) then local v89=(function() return 603 -(268 + 335) ;end)();while true do if (v89==(0 -0)) then v60=(function() return {};end)();for v112= #"}",v59 do local v113=(function() return 0 -0 ;end)();local v114=(function() return;end)();local v115=(function() return;end)();local v116=(function() return;end)();while true do if (v113~=0) then else v114=(function() return 867 -(550 + 317) ;end)();v115=(function() return nil;end)();v113=(function() return 1;end)();end if (v113~=1) then else v116=(function() return nil;end)();while true do if (0==v114) then local v155=(function() return 0 -0 ;end)();while true do if (v155~=1) then else v114=(function() return 1;end)();break;end if ((572 -(426 + 146))==v155) then v115=(function() return v21();end)();v116=(function() return nil;end)();v155=(function() return 1 + 0 ;end)();end end end if ((1 -0)==v114) then if (v115== #"}") then v116=(function() return v21()~=(0 -0) ;end)();elseif (v115==(813 -(569 + 242))) then v116=(function() return v24();end)();elseif (v115== #"19(") then v116=(function() return v25();end)();end v60[v112]=(function() return v116;end)();break;end end break;end end end v89=(function() return 1;end)();end if (v89==(286 -(134 + 151))) then v58[ #"-19"]=(function() return v21();end)();v53=(function() return 1668 -(970 + 695) ;end)();break;end end end if (0~=v53) then else v54=(function() return function(v102,v103,v104) local v105=(function() return 0;end)();local v106=(function() return;end)();while true do if (v105~=(0 + 0)) then else v106=(function() return 0;end)();while true do if (v106~=0) then else local v121=(function() return 0;end)();local v122=(function() return;end)();while true do if (v121==0) then v122=(function() return 0 -0 ;end)();while true do if (v122==0) then local v227=(function() return 1990 -(582 + 1408) ;end)();while true do if (v227~=(1251 -(721 + 530))) then else v102[v103-#"[" ]=(function() return v104();end)();return v102,v103,v104;end end end end break;end end end end break;end end end;end)();v55=(function() return {};end)();v56=(function() return {};end)();v53=(function() return 3 -2 ;end)();end if (v53~=(1 -0)) then else local v90=(function() return 0 -0 ;end)();local v91=(function() return;end)();while true do if (v90~=(0 -0)) then else v91=(function() return 1824 -(1195 + 629) ;end)();while true do if ((1 + 0)==v91) then v59=(function() return v23();end)();v53=(function() return 2 -0 ;end)();break;end if (v91==(241 -(187 + 54))) then v57=(function() return {};end)();v58=(function() return {v55,v56,nil,v57};end)();v91=(function() return 781 -(162 + 618) ;end)();end end break;end end end if (v53==(3 + 0)) then for v95= #",",v23() do local v96=(function() return v21();end)();if (v20(v96, #"\\", #"{")~=0) then else local v108=(function() return 1500 -(1408 + 92) ;end)();local v109=(function() return;end)();local v110=(function() return;end)();local v111=(function() return;end)();while true do if (v108==1) then local v117=(function() return 0 + 0 ;end)();local v118=(function() return;end)();while true do if (v117==(0 -0)) then v118=(function() return 0 -0 ;end)();while true do if ((1 + 0)~=v118) then else v108=(function() return 1638 -(1373 + 263) ;end)();break;end if ((1000 -(451 + 549))==v118) then v111=(function() return {v22(),v22(),nil,nil};end)();if (v109==(0 + 0)) then local v228=(function() return 0 -0 ;end)();local v229=(function() return;end)();while true do if (0==v228) then v229=(function() return 0;end)();while true do if (v229==(0 -0)) then v111[ #"xxx"]=(function() return v22();end)();v111[ #".com"]=(function() return v22();end)();break;end end break;end end elseif (v109== #"|") then v111[ #"-19"]=(function() return v23();end)();elseif (v109==(1386 -(746 + 638))) then v111[ #"gha"]=(function() return v23() -((1 + 1)^16) ;end)();elseif (v109== #"xxx") then local v245=(function() return 0 -0 ;end)();local v246=(function() return;end)();while true do if ((529 -(406 + 123))~=v245) then else v246=(function() return 0;end)();while true do if (v246==(341 -(218 + 123))) then v111[ #"-19"]=(function() return v23() -((1583 -(1535 + 46))^(16 + 0)) ;end)();v111[ #"?id="]=(function() return v22();end)();break;end end break;end end end v118=(function() return 1 + 0 ;end)();end end break;end end end if (v108==0) then local v119=(function() return 0 + 0 ;end)();while true do if (v119==(1323 -(1249 + 73))) then v108=(function() return 1 + 0 ;end)();break;end if (v119==(560 -(306 + 254))) then v109=(function() return v20(v96,1 + 1 , #"19(");end)();v110=(function() return v20(v96, #"?id=",11 -5 );end)();v119=(function() return 2 -1 ;end)();end end end if (v108==3) then if (v20(v110, #"-19", #"nil")== #"[") then v111[ #"xnxx"]=(function() return v60[v111[ #"0313"]];end)();end v55[v95]=(function() return v111;end)();break;end if (v108==(1902 -(106 + 1794))) then if (v20(v110, #"\\", #"|")== #"]") then v111[1469 -(899 + 568) ]=(function() return v60[v111[2 + 0 ]];end)();end if (v20(v110,2,4 -2 )== #"<") then v111[ #"xxx"]=(function() return v60[v111[ #"91("]];end)();end v108=(function() return 7 -4 ;end)();end end end end for v97= #" ",v23() do v56,v97,v28=(function() return v54(v56,v97,v28);end)();end return v58;end end end local function v29(v61,v62,v63) local v64=v61[(290 -175) -(4 + 0 + 110) ];local v65=v61[586 -(57 + (1356 -829)) ];local v66=v61[1430 -(41 + 1386) ];return function(...) local v67=v64;local v68=v65;local v69=v66;local v70=v27;local v71=(512 -408) -((1813 -(503 + 1293)) + 86) ;local v72= -(1 + 0);local v73={};local v74={...};local v75=v12("#",...) -((5 -3) -1) ;local v76={};local v77={};for v86=166 -(122 + 32 + 12) ,v75 do if (v86>=v69) then v73[v86-v69 ]=v74[v86 + (1 -0) ];else v77[v86]=v74[v86 + ((6 -3) -2) ];end end local v78=(v75-v69) + 1 + 0 ;local v79;local v80;while true do v79=v67[v71];v80=v79[(1062 -(810 + 251)) + 0 ];if (v80<=(16 + 7)) then if ((v80<=(21 -10)) or (900==3377)) then if ((4459>591) and (v80<=(70 -(30 + 35)))) then if ((v80<=2) or (1061==1857)) then if ((3398>=2395) and (v80<=(0 + 0))) then local v126=v79[1259 -(1043 + 214) ];local v127=v77[v79[11 -8 ]];v77[v126 + (1213 -(323 + 889)) ]=v127;v77[v126]=v127[v79[10 -6 ]];elseif ((2760>1364) and (v80==(581 -(361 + 219)))) then v77[v79[322 -(53 + 267) ]]=v77[v79[1 + 1 + 1 ]];else v77[v79[415 -(15 + 398) ]]();end elseif ((v80<=(985 -(18 + 870 + 94))) or (4902<=3595)) then local v131=v79[2];v77[v131](v77[v131 + ((1 + 2) -2) ]);elseif (v80>(3 + 1)) then local v159=v79[2];v77[v159]=v77[v159]();else local v161=v79[2 + 0 ];local v162,v163=v70(v77[v161](v13(v77,v161 + (851 -(20 + 830)) ,v79[3 + 0 ])));v72=(v163 + v161) -((660 -(43 + 490)) -(116 + 10)) ;local v164=(733 -(711 + 22)) + (0 -0) ;for v205=v161,v72 do local v206=0;while true do if (v206==(738 -(542 + (758 -562)))) then v164=v164 + 1 + 0 ;v77[v205]=v162[v164];break;end end end end elseif (v80<=(17 -9)) then if (v80<=(2 + 4)) then local v132=v79[2 + 0 + 0 ];v77[v132]=v77[v132](v13(v77,v132 + 1 + 0 ,v79[(9 -2) -4 ]));elseif (v80==(17 -(3 + 7))) then local v165=v79[(2470 -917) -(75 + 1051 + 425) ];v77[v165](v13(v77,v165 + (406 -(118 + 170 + 117)) ,v79[11 -8 ]));else v77[v79[1123 -((1862 -(1344 + 400)) + 1003) ]]=v79[3];end elseif ((v80<=((431 -(255 + 150)) -17)) or (2183>=2824)) then v77[v79[2]][v79[380 -(142 + 235) ]]=v77[v79[18 -14 ]];elseif ((1936==1936) and (v80>10)) then v77[v79[1 + (164 -(92 + 71)) ]]={};else v77[v79[1 + 1 ]][v79[3]]=v79[981 -(553 + 424) ];end elseif ((v80<=17) or (3852==293) or (4832<4313)) then if (v80<=((21 + 5) -12)) then if (v80<=(11 + 1)) then v71=v79[3 + 0 ];elseif (v80==13) then v77[v79[2 + 0 ]]();else local v171=0 + 0 ;local v172;while true do if ((v171==0) or (1559==4588)) then v172=v79[2 + (0 -0) ];v77[v172]=v77[v172]();break;end end end elseif (v80<=(32 -17)) then do return;end elseif (v80==(44 -28)) then v77[v79[2]]=v29(v68[v79[6 -(2 + 1) ]],nil,v63);else local v174=0 + 0 ;local v175;while true do if ((4088>3874) and (v174==(0 -(765 -(574 + 191))))) then v175=v79[755 -(239 + 514) ];v77[v175]=v77[v175](v77[v175 + 1 + 0 ]);break;end end end elseif ((4332==4332) and (v80<=(8 + (29 -17)))) then if (v80<=18) then v77[v79[(4298 -2967) -(797 + 532) ]]=v77[v79[3 + (1739 -(404 + 1335)) ]];elseif (v80>(4 + 3 + 12)) then do return;end else local v176=v79[2];local v177=v77[v176];local v178=v79[(855 -(254 + 595)) -3 ];for v207=1203 -((453 -80) + 829) ,v178 do v177[v207]=v77[v176 + v207 ];end end elseif ((3999>=2900) and (v80<=(752 -(476 + 255)))) then v77[v79[1132 -(369 + 761) ]]=v63[v79[3]];elseif (v80==(13 + 9)) then v77[v79[2 -0 ]]=v77[v79[5 -2 ]][v79[242 -(64 + 174) ]];else local v181=v79[1 + 0 + 1 ];v77[v181]=v77[v181](v13(v77,v181 + 1 ,v72));end elseif ((v80<=35) or (4484==788) or (2525>4064)) then if (v80<=(42 -13)) then if (v80<=26) then if ((4371==4371) and (v80<=24)) then local v141=336 -(144 + 192) ;local v142;while true do if ((v141==0) or (266>4986)) then v142=v79[(79 + 139) -(42 + 174) ];v77[v142]=v77[v142](v13(v77,v142 + 1 + 0 ,v79[3 + 0 ]));break;end end elseif ((1991>=925) and (v80==(11 + 14))) then local v183=v79[(1843 -(10 + 327)) -(363 + (1267 -(55 + 71))) ];v77[v183](v77[v183 + (1581 -(1183 + 397)) ]);elseif v77[v79[5 -3 ]] then v71=v71 + 1 + 0 ;else v71=v79[3 + 0 ];end elseif ((455<2053) and (v80<=((2636 -634) -((3703 -(573 + 1217)) + 62)))) then local v143=v79[2];local v144=v77[v79[2 + 0 + (2 -1) ]];v77[v143 + (2 -1) ]=v144;v77[v143]=v144[v79[4]];elseif (v80==28) then local v184=v79[1935 -(565 + 1368) ];v77[v184]=v77[v184](v77[v184 + (3 -2) ]);else for v212=v79[1663 -(1477 + 184) ],v79[3 -0 ] do v77[v212]=nil;end end elseif ((4568>=3907) and (v80<=32)) then if (v80<=(28 + 2)) then v77[v79[858 -(564 + 23 + 269) ]][v79[4 -1 ]]=v79[4];elseif (v80==(93 -62)) then if (v77[v79[306 -(244 + 60) ]]==v79[4 + 0 ]) then v71=v71 + ((815 -(118 + 220)) -(41 + 435)) ;else v71=v79[1004 -(938 + 21 + 42) ];end else v77[v79[2]]=v77[v79[3 + 0 ]][v79[1129 -(936 + 189) ]];end elseif (v80<=(11 + 22)) then v77[v79[1615 -(1565 + (497 -(108 + 341))) ]]={};elseif (v80>(22 + 12)) then v77[v79[1140 -(782 + 356) ]]=v79[(435 -165) -(176 + 91) ];else local v190=v79[4 -2 ];local v191=v77[v190];for v214=v190 + (1 -0) ,v79[3] do v7(v191,v77[v214]);end end elseif (v80<=(1133 -(975 + 117))) then if (((1246<3470) and (v80<=((860 + 1053) -((1096 -(714 + 225)) + 1718)))) or (826==4851)) then if ((4068>=972) and (v80<=(30 + (17 -11)))) then v77[v79[6 -(16 -12) ]]=v63[v79[10 -(9 -2) ]];elseif (v80>(1055 -(697 + 321))) then if ((493<3893) and (v79[5 -3 ]==v77[v79[4]])) then v71=v71 + (1 -0) ;else v71=v79[6 -3 ];end else local v192=0;local v193;while true do if (v192==0) then v193=v79[1 + 1 ];v77[v193]=v77[v193](v13(v77,v193 + ((1 + 0) -0) ,v72));break;end end end elseif ((183==183) and (v80<=((150 -46) -65))) then if ((v79[1229 -(322 + 905) ]==v77[v79[615 -(602 + 9) ]]) or (1473>=3332)) then v71=v71 + (1190 -(449 + (1546 -(118 + 688)))) ;else v71=v79[875 -(826 + 46) ];end elseif ((1159<=1788) and (v80==(987 -(245 + 702)))) then if ((v77[v79[6 -4 ]]==v79[(50 -(25 + 23)) + 2 ]) or (3507>4318)) then v71=v71 + 1 + 0 ;else v71=v79[3];end else v77[v79[2]]=v29(v68[v79[1901 -(260 + 1638) ]],nil,v63);end elseif ((v80<=((1977 -(711 + 782)) -((731 -349) + 58))) or (4051<=1157)) then if (v80<=(134 -92)) then v77[v79[2 + 0 ]][v79[5 -(471 -(270 + 199)) ]]=v77[v79[4]];elseif ((v80==(127 -(1970 -(927 + 959)))) or (3075<=2965)) then if ((604<2881) and v77[v79[2]]) then v71=v71 + (1206 -(902 + 303)) ;else v71=v79[5 -(1 + 1) ];end else local v196=v79[4 -2 ];v77[v196](v13(v77,v196 + 1 + 0 ,v79[3]));end elseif (v80<=(1736 -(1121 + (1917 -1348)))) then if (v80==(259 -((1841 -(580 + 1239)) + (570 -378)))) then for v215=v79[685 -(483 + 192 + 8) ],v79[1466 -(1404 + 59) ] do v77[v215]=nil;end else local v197=v79[2];local v198=v77[v197];local v199=v79[3];for v217=2 -1 ,v199 do v198[v217]=v77[v197 + v217 ];end end elseif (v80>((794 -(16 + 716)) -15)) then local v200=v79[767 -(17 + 451 + 297) ];local v201,v202=v70(v77[v200](v13(v77,v200 + (563 -(334 + (439 -211))) ,v79[10 -7 ])));v72=(v202 + v200) -((99 -(11 + 86)) -1) ;local v203=0;for v220=v200,v72 do local v221=(0 -0) -(285 -(175 + 110)) ;while true do if (v221==(0 + 0 + 0)) then v203=v203 + 1 ;v77[v220]=v201[v203];break;end end end else v71=v79[239 -(141 + 95) ];end v71=v71 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
